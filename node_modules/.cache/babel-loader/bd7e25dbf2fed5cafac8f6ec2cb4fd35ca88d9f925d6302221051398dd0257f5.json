{"ast":null,"code":"const initialState = {\n  markdownText: ''\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'SET_MARKDOWN_TEXT':\n      return {\n        ...state,\n        markdownText: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialState","markdownText","reducer","state","arguments","length","undefined","action","type","payload"],"sources":["D:/GAN/web/markdown-previewer/src/reducer.js"],"sourcesContent":["const initialState = {\r\n    markdownText: '',\r\n  };\r\n  \r\n  const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case 'SET_MARKDOWN_TEXT':\r\n        return { ...state, markdownText: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default reducer;"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC3C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,mBAAmB;MACtB,OAAO;QAAE,GAAGL,KAAK;QAAEF,YAAY,EAAEM,MAAM,CAACE;MAAQ,CAAC;IACnD;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}